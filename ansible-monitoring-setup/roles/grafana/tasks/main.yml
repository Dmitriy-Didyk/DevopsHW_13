- name: Install required dependencies
  apt:
    name: ["apt-transport-https", "software-properties-common", "wget"]
    state: present
    update_cache: true

- name: Add Grafana GPG key
  apt_key:
    url: https://packages.grafana.com/gpg.key
    state: present

- name: Add Grafana APT repository
  ansible.builtin.apt_repository:
    repo: "deb https://packages.grafana.com/oss/deb stable main"
    state: present

- name: Install Grafana
  apt:
    name: grafana
    state: present
    update_cache: true

- name: Ensure Grafana is running
  service:
    name: grafana-server
    state: started
    enabled: true

- name: Wait for Grafana to be ready
  uri:
    url: "http://localhost:3000/login"
    method: GET
    status_code: 200
  register: grafana_ready
  retries: 10
  delay: 10
  until: grafana_ready.status == 200

- name: Generate Grafana API service account
  uri:
    url: "http://localhost:3000/api/serviceaccounts"
    method: POST
    headers:
      Content-Type: "application/json"
    url_username: "admin"
    url_password: "Welcome1!"
    body: |
      {
        "name": "ansible-service-account",
        "role": "Admin"
      }
    status_code: 201
    body_format: json
  register: service_account_response

- name: Generate token for service account
  uri:
    url: "http://localhost:3000/api/serviceaccounts/{{ service_account.json.id }}/tokens"
    method: POST
    headers:
      Content-Type: "application/json"
    user: admin
    password: Welcome1!
    body: |
      {
        "name": "ansible-token",
        "secondsToLive": 86400
      }
    body_format: json
    status_code: 200
    return_content: yes
  register: api_token

- name: Configure Grafana datasource
  uri:
    url: "http://localhost:3000/api/datasources"
    method: POST
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ api_token.json.key }}"
    body: |
      {
        "name": "Prometheus",
        "type": "prometheus",
        "url": "http://localhost:9090",
        "access": "proxy",
        "isDefault": true
      }
    body_format: json
    status_code: 200
