- name: Install required dependencies
  apt:
    name: ['wget', 'curl', 'gnupg']
    state: present
    update_cache: true

- name: Add Grafana GPG key
  apt_key:
    url: https://packages.grafana.com/gpg.key
    state: present

- name: Add Grafana APT repository
  copy:
    content: "deb https://packages.grafana.com/oss/deb stable main\n"
    dest: /etc/apt/sources.list.d/grafana.list

- name: Install Grafana
  apt:
    name: grafana
    state: present

- name: Ensure Grafana is running
  service:
    name: grafana-server
    state: started
    enabled: true

- name: Wait for Grafana to be ready
  uri:
    url: "http://localhost:3000/login"
    method: GET
    status_code: 200
  register: result
  until: result.status == 200
  retries: 5
  delay: 5

- name: Reset admin password
  command: grafana-cli admin reset-admin-password Welcome1!
  become: true

- name: Create Grafana API service account
  uri:
    url: "http://localhost:3000/api/serviceaccounts"
    method: POST
    headers:
      Content-Type: "application/json"
      Authorization: "Basic {{ 'admin:Welcome1!' | b64encode }}"
    body: |
      {
        "name": "ansible-service-account",
        "role": "Admin"
      }
    body_format: json
    status_code: 201
  register: service_account

- name: Generate token for service account
  uri:
    url: "http://localhost:3000/api/serviceaccounts/{{ service_account.json.id }}/tokens"
    method: POST
    headers:
      Content-Type: "application/json"
      Authorization: "Basic {{ 'admin:Welcome1!' | b64encode }}"
    body: |
      {
        "name": "ansible-token",
        "secondsToLive": 86400
      }
    body_format: json
    status_code: 201
  register: token

- name: Configure Grafana datasource
  uri:
    url: "http://localhost:3000/api/datasources"
    method: POST
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ token.json.key }}"
    body: |
      {
        "name": "Prometheus",
        "type": "prometheus",
        "url": "http://localhost:9090",
        "access": "proxy",
        "isDefault": true
      }
    body_format: json
    status_code: 200
